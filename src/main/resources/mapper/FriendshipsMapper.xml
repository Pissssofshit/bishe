<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bishe.dao.FriendshipsMapper" >
  <resultMap id="BaseResultMap" type="com.bishe.model.Friendships" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user1" property="user1" jdbcType="INTEGER" />
    <result column="user2" property="user2" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from friendships
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bishe.model.Friendships" >
    insert into friendships (id, user1, user2, 
      `status`, `time`)
    values (#{id,jdbcType=INTEGER}, #{user1,jdbcType=INTEGER}, #{user2,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bishe.model.Friendships" >
    update friendships
    set user1 = #{user1,jdbcType=INTEGER},
      user2 = #{user2,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `time` = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <select id="getByUserId1AndUserId2" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, user1, user2, `status`, `time`
    from friendships
    where ((user1 = #{userId1,jdbcType=INTEGER}
    and user2 =  #{userId2,jdbcType=INTEGER})
    or (user2 = #{userId1,jdbcType=INTEGER}
    and user1 =  #{userId2,jdbcType=INTEGER}))
  </select>
  <select id="getUserApplyList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, user1, user2, `status`, `time`
    from friendships
    where (user1 = #{userId,jdbcType=INTEGER}
    and status = 3 )
  </select>

  <select id="selectByUserIds" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, user1, user2, `status`, `time`
    from friendships
    where (user1 = #{userId1,jdbcType=INTEGER}
    and user2 =#{userId2,jdbcType=INTEGER})
    or (user1 = #{userId2,jdbcType=INTEGER}
    and user2 =#{userId1,jdbcType=INTEGER})
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, user1, user2, `status`, `time`
    from friendships
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, user1, user2, `status`, `time`
    from friendships
  </select>
</mapper>