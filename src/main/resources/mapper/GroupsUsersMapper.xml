<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bishe.dao.GroupsUsersMapper" >
  <resultMap id="BaseResultMap" type="com.bishe.model.GroupsUsers" >
    <id column="group" property="group" jdbcType="INTEGER" />
    <id column="user" property="user" jdbcType="INTEGER" />
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="permissions" property="permissions" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from groups_users
    where `group` = #{group,jdbcType=INTEGER}
      and `user` = #{user,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bishe.model.GroupsUsers" >
    insert into groups_users (`group`, `user`, id, 
      `status`, permissions, `time`
      )
    values (#{group,jdbcType=INTEGER}, #{user,jdbcType=INTEGER}, #{id,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{permissions,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.bishe.model.GroupsUsers" >
    update groups_users
    set id = #{id,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      permissions = #{permissions,jdbcType=INTEGER},
      `time` = #{time,jdbcType=TIMESTAMP}
    where `group` = #{group,jdbcType=INTEGER}
      and `user` = #{user,jdbcType=INTEGER}
  </update>

  <select id="getUserApply" resultMap="BaseResultMap" parameterType="map" >
    select `group`, `user`, id, `status`, permissions, `time`
    from groups_users
    where `group` = #{groupId,jdbcType=INTEGER}
    and `status` = 3
  </select>

  <select id="groupsAdmin" resultType="java.lang.Integer" parameterType="map" >
    select `group`
    from groups_users
    where `user` = #{userId,jdbcType=INTEGER}
    and permissions = 1
  </select>


  <select id="selectGroupUsersAndPermission" resultMap="BaseResultMap" parameterType="map" >
    select `group`, `user`, id, `status`, permissions, `time`
    from groups_users
    where permissions = 1
      and `group` = #{groupId,jdbcType=INTEGER}
      and `status` != 3
  </select>
  <select id="selectGroupUsersByUserId" resultMap="BaseResultMap" parameterType="map" >
    select `group`, `user`, id, `status`, permissions, `time`
    from groups_users
    where `user` = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select `group`, `user`, id, `status`, permissions, `time`
    from groups_users
    where `group` = #{group,jdbcType=INTEGER}
      and `user` = #{user,jdbcType=INTEGER}
  </select>

  <select id="selectGroupUsersByUserIdAndNotBlock" resultMap="BaseResultMap" parameterType="map" >
    select `group`, `user`, id, `status`, permissions, `time`
    from groups_users
    where `status` != 3
      and `user` = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectGroupUsers" resultMap="BaseResultMap" parameterType="map" >
    select `group`, `user`, id, `status`, permissions, `time`
    from groups_users
    where `group` = #{groupId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select `group`, `user`, id, `status`, permissions, `time`
    from groups_users
  </select>
</mapper>